{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../AQILegend.svelte",
    "../../AnimationDate.svelte",
    "../../App.svelte",
    "../../EventInfoBox.svelte",
    "../../EventInfoContainer.svelte",
    "../../PolicyEvent.svelte",
    "../../Scrubber.svelte",
    "../../Thermometer.svelte",
    "../../Icon.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Thermometer from './Thermometer.svelte';\n    import { onMount } from 'svelte';\n    import { scaleLinear } from 'd3-scale'\n    import { quantize, interpolate } from 'd3-interpolate'\n    import { create } from 'd3-selection';\n    import { axisRight } from 'd3-axis';\n    import { classnames } from './classnames';\n\n    export let currentFrame;\n    export let frameData;\n    export let translator;\n    export let currLang;\n\n    // DO NOT CHANGE -- used in the png-izer as well\n    const green_color = '#93c947';\n    const red_color = '#f0004c';\n    const yellow_color = '#ebc505';\n    const orange_color = '#fc9d03';\n    const purple_color = '#5e03fc';\n    const dark_purple_color = '#4b1f7a';\n    const black_color = '#050505';\n\n    const airQualityScale = [0, 12, 35, 55, 150, 250, 450, 500]; // this is up for changing!\n    const airQualityScaleTicks = [\n        {label: 12, heightpx: 30, text: 'good'},\n        {label: 35, heightpx: 30, text: 'moderate'},\n        {label: 55, heightpx: 30, text: 'unhealthy_sensitive'},\n        {label: 150, heightpx: 40, text: 'unhealthy'},\n        {label: 250, heightpx: 50, text: 'very_unhealthy'},\n        {label: 500, heightpx: 50, text: 'hazardous'}\n    ]\n    const colorScale = [green_color, // <12\n            yellow_color, // <35\n            orange_color, // <55\n            red_color, // <150\n            purple_color, // < 250\n            dark_purple_color, // < 500\n            dark_purple_color] // < 550\n\n//---- Create Color Scale ----------------------\n\n    var color = scaleLinear().domain(airQualityScale).range(colorScale);\n    color.clamp(true);\n\n    let width = 30; // must match pm25-scale-ticks\n    let height = 250;\n    let marginTop = 0;\n    let marginRight = 0;\n    let marginBottom = 0;\n    let marginLeft = 0;    \n\n    function ramp(color) {\n        let n = height;\n        const canvas = document.getElementById(\"pm25-scale\");\n        canvas.height = height;\n        canvas.width = width;\n        const context = canvas.getContext(\"2d\");\n        \n        for (let i = 0; i < n; ++i) {\n            context.fillStyle = color((n-1-i) / (n - 1));\n            context.fillRect(0, i, width, height);\n        }\n        \n        return canvas;\n    }\n\n    // Create the svg that will display the legend\n    const svg = create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    // Get the length over which to quantize\n    const n = Math.min(color.domain().length, color.range().length);\n    let x = color.copy().rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n   \n    onMount(async () => {\n        svg.append(\"image\")\n        .attr(\"x\", marginLeft)\n        .attr(\"y\", marginTop)\n        .attr(\"width\", width - marginLeft - marginRight)\n        .attr(\"height\", height - marginTop - marginBottom)\n        .attr(\"preserveAspectRatio\", \"none\")\n        .attr(\"xlink:href\", ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL());\n    });\n\n\n\n</script>\n\n<div class='ap-legend'>\n    <div class='legend-tile'>\n        <div class='ap-legend-pm25-scale-title'>{translator.translate('pm25_scale_title', currLang)}</div>\n        <div class='ap-legend-pm25-scale-container'>\n            <canvas class='pm25-scale' id='pm25-scale'></canvas>\n            <div class='pm25-scale-ticks'>\n                {#each airQualityScaleTicks as tick}\n                    <div class={classnames('pm25-scale-tick-row', 'pm25-scale-tick-row-'+tick.heightpx)}>\n                        <div class='pm25-scale-label'>\n                        <span class='pm25-scale-number'>\n                            {tick.label} \n                        </span>\n                        <span>{' Î¼g/m3'}</span>\n                        </div>\n                        <div class='aqi-scale-labels'>{translator.translate(tick.text, currLang)}</div>\n                    </div>\n                {/each}\n            </div>\n        </div>\n\n        <div class='key-container'>\n            <img class='key-img' src=\"./imgs/uncertainty_mask_legend.png\" alt=\"\">\n            <div class='key-description'>\n                <span>{translator.translate('legend_not_enough_data', currLang)}</span>\n            </div>\n        </div>\n\n\n        <div class='key-container'>\n            <img class='key-img' src=\"./imgs/station_marker_legend.png\" alt=\"\">\n            <div class='key-description'>\n                <span>{translator.translate('legend_station_marker', currLang)}</span>\n            </div>\n        </div>\n\n         <!-- <button class='button-switch-basemap'>Switch to Satellite View</button> -->\n  \n    </div>\n\n     <div class='legend-tile temperature-key-container'>\n        <div class='thermometer-container'>\n            <Thermometer \n                currentFrame={currentFrame} \n                frameData={frameData}\n            />\n        </div>\n        <div class='temperature-description'>\n            <div class='temperature-description-title'> {translator.translate('legend_temperature_title', currLang)} </div>\n           <span class='temperature-description-body' >{translator.translate('legend_temperature_description', currLang)}</span>\n        </div>\n    </div>\n    \n\n</div>\n\n<style>\n\n.ap-legend {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    min-width: 75px;\n    padding-left: 10px;\n    font-size: 12px;\n}\n\n.legend-tile {\n    background-color: white;\n    color: #2B2D42;\n    border-radius: 4px;\n    margin-bottom: 10px;\n    padding: 5px 5px;\n}\n\n.ap-legend-pm25-scale-container {\n    display: flex;\n    position: relative;\n}\n\n.ap-legend-pm25-scale-title {\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n.pm25-scale {\n    opacity: 0.7;\n}\n\n.pm25-scale-ticks {\n    height: 250px;\n    width: 100%;\n    font-size: 10px;\n    padding-left: 5px;\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: space-between;\n    z-index: 100;\n}\n\n.pm25-scale-tick-row {\n    display: flex;\n    height: 20px;\n    align-items: baseline;\n    padding-top: 10px;\n}\n\n.pm25-scale-tick-row-30 {\n    height: 30px;\n    padding-top: 5px;\n}\n\n.pm25-scale-tick-row-40 {\n    height: 40px;\n}\n\n.pm25-scale-tick-row-50 {\n    height: 50px;\n}\n\n.pm25-scale-label {\n    width: 40%;\n}\n\n.pm25-scale-number {\n    font-size: 12px;\n    font-weight: bold;\n}\n\n.aqi-scale-labels {\n  width: 100px;\n  font-weight: bold;\n}\n\n.key-description {\n    padding-left: 5px;\n    display: flex;\n    align-items: center;\n}\n\n.key-img {\n    height: 30px;\n    width: 30px;\n}\n\n.key-container {\n    display: flex;\n    height: 30px;\n    margin-top: 10px;\n} \n\n/*--------- Other Controls ---------------*/\n\n.button-switch-basemap {\n    margin: 5px 0;\n}\n\n.temperature-key-container {\n    min-height: 175px;\n    display: flex;\n}\n\n.thermometer-container {\n    width: 180%; /* some strangeness */\n}\n\n.temperature-description-body {\n    font-size: 11px;\n}\n\n.temperature-description-title {\n    font-weight: bold;\n    transform: translateX(-5px);\n    padding-bottom: 5px;\n}\n\n</style>",
    " <script>\n\n   export let currentFrame;\n   export let frameData;\n   export let translator;\n   export let currLang;\n\n   let currentDate;\n\n    $: {\n       currentDate = frameData[currentFrame].date;\n    }\n\n </script>\n\n <span class='animation-date'>\n    {#if currentDate}\n        {translator.translateDate(currentDate, currLang)}\n    {/if}\n </span>\n\n <style>\n   .animation-date {\n      color: #2B2D42\n   }\n </style>\n  \n",
    "<link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />\n<link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap\" rel=\"stylesheet\">\n\n<script>\n  import { onMount } from 'svelte';\n  import mapboxgl from './mapbox-gl/mapbox-gl'; // USING LOCAL PATCHED COPY\n  import { stations } from './stations_geojson.js';\n  import Scrubber from './Scrubber.svelte' \n  import AQILegend from './AQILegend.svelte';\n  import EventInfoContainer from './EventInfoContainer.svelte';\n  import moment from 'moment';\n  import { frameData } from './frameData.js';\n  import { policyEvents } from './policyEvents.js';\n  import getUnicodeFlagIcon from 'country-flag-icons/unicode';\n  import { Translator } from './translator';\n  import _ from 'lodash';\n\n\n  let appState = {\n    currEventId: undefined,\n    isUserRunning: false\n  };\n\n  const updateAppState = (updatedState) => {\n    console.log(updatedState);\n    appState = _.extend({}, appState, updatedState);\n  }\n\n//---------- Control langauge of the page ----------------------\n  let translator = new Translator();\n  let currLang = 'US'; // 'MN'\n  let oppLang = 'MN'; // 'MN'\n\n  const handleUpdateLanguage = () => {\n    oppLang = currLang;\n    currLang = currLang === 'US' ? 'MN' : 'US';\n  }\n\n//---------------------------------------------------------------\n\n  \n  const UB_COORDINATES = [106.900354, 47.917802];\n  const MAPBOX_TOKEN = 'pk.eyJ1IjoiaGF5bGV5c3RhcnIiLCJhIjoiY2s5MmhvYTU3MDBkaTNwcGI3cWJtMjdkcCJ9.tOfFfs9wWWcOfQ1sDMiwvQ';\n  mapboxgl.accessToken = MAPBOX_TOKEN;\n  const FRAME_CHECKING_RATE = 33; // check every x ms what the current time is in the video\n\n  let map;\n\n  let currentTime = 0;\n  let currentFrame = 0;\n\n//---------- Translate current time in video to the number of the current frame ----\n\n  let maxTime = 0; // will reset when video loads\n  let maxFrame = frameData.length-1; \n  let timeToFrameMultiplier = 0;\n  $: timeToFrameMultiplier = maxTime > 0 ? maxFrame / maxTime : 0;\n  $: currentFrame = Math.round(timeToFrameMultiplier * currentTime);\n\n\n//----------- Logic for playing and pausing the animation -------------------------\n  let animationPaused = true;\n  let isAnimationEnded = false;\n  let visualizationStarted = false; // first time only\n\n  const pauseAnimation = () => {\n    animationPaused = true;\n    map.getSource('ap_video').pause();\n  }\n\n  const startAnimation = () => {\n    animationPaused = false;\n    isAnimationEnded = false;\n    visualizationStarted = true;\n    map.getSource('ap_video').play();\n  }\n\n  const startVisualization = () => {\n    startAnimation();\n    updateAppState({isUserRunning: true});\n    visualizationStarted = true;\n  }\n\n  // set the currentTime to what the video is showing so that the dependent components stay up to date\n  const reportCurrentTime = (updateWhilePaused) => {\n    if (!animationPaused | updateWhilePaused) {\n      currentTime = map && map.getSource('ap_video') && map.getSource('ap_video').video.currentTime;\n      if (currentTime >= maxTime) {\n        isAnimationEnded = true;\n      }\n    }\n  }\n\n  const updateCurrentTime = (time) => {\n    if (map && map.getSource('ap_video')) {\n      map.getSource('ap_video').seek(time);\n      reportCurrentTime(true);\n    }\n  }\n\n  const changePlaybackRate = (playRate) => {\n    map.getSource('ap_video').video.playbackRate = playRate;\n  }\n\n//------ Setting up Mapbox layers ---------------------------------\n\n  // After the DOM has been rendered set up the mapbox. (Won't work before map html is available.)\n\tonMount(async () => {\n\t\tmap = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v9',\n        // style: 'mapbox://styles/mapbox/satellite-v9',\n        center: UB_COORDINATES, // starting position\n        zoom: 11 // starting zoom\n      });\n    \n    \n    map.on('load', function() { // what to do when the map is first loaded on the page\n      addVideoLayer();\n      addUncertaintyMaskLayer();\n      addStationLayer();\n\n      //cannot access the video right away due to some mapbox strangeness\n      const waiting = () => {\n        if (!map.isStyleLoaded()) {\n          setTimeout(waiting, 200);\n        } else {\n          map.getSource('ap_video').pause();\n          let videoSource = map.getSource('ap_video');\n          videoSource.video.loop = false;\n          maxTime = videoSource.video.duration;\n          var intervalTimer = setInterval(reportCurrentTime, FRAME_CHECKING_RATE);\n        }\n      };\n      waiting();\n        \n    });\n  });\n\n  const addVideoLayer = () => {\n    map.addSource('ap_video', {\n       \"type\": \"video\",\n       \"urls\": [\n        \"videos/pm25_over_ub.mp4\",\n       ],\n      \"coordinates\": [ // these must be exactly the extent of the raster frames in R!!\n          [106.6907, 48.03644],\n          [107.1107, 48.03644],\n          [107.1107, 47.82644],\n          [106.6907, 47.82644]\n      ]\n    });\n\n    map.addLayer({\n      id: 'ap_video',\n      type: 'raster',\n      source: 'ap_video',\n       paint: {\n          'raster-opacity': 0.3\n       }\n    });\n  }\n\n  const addUncertaintyMaskLayer = () => {\n    map.addSource('ap_uncertainty', {\n          \"type\": \"image\",\n          \"url\": \"imgs/uncertainty_mask_img.png\",\n          \"coordinates\": [ // these must be exactly the extent of the raster frames in R!!\n              [106.6907, 48.03644],\n              [107.1107, 48.03644],\n              [107.1107, 47.82644],\n              [106.6907, 47.82644]\n          ]\n        });\n\n        map.addLayer({\n          id: 'ap_uncertainty',\n          type: 'raster',\n          source: 'ap_uncertainty'\n        });\n  }\n\n\n  const addStationLayer = () => {\n    stations.features.forEach(station => {\n      const lon = station.geometry.coordinates[0];\n      const lat = station.geometry.coordinates[1];\n      const el = document.createElement('div');\n\n      // this is a hack! have to update the style in AQILegend for the aqi-station-marker if you change this\n      el.className = 'station-marker';\n      el.style.height = '7px';\n      el.style.width = '7px';\n      el.style.backgroundColor = 'black';\n      el.style.borderRadius= '3.5px';\n      const stationMarker = new mapboxgl.Marker(el)\n                  .setLngLat([lon, lat])\n                  .addTo(map);\n    });            \n  }\n\n  const setBaseLayer = () => {\n    map.setStyle('mapbox://styles/mapbox/satellite-v9');\n  }\n\n</script>\n\n<!--HTML-->\n<div class='ub-ap-viz'>\n\n  <div class='header'>\n    <div class='title-container'>\n      <div class='title'>{translator.translate('title', currLang)}</div>\n        <button class='btn translate-button' on:click={handleUpdateLanguage}>\n          {getUnicodeFlagIcon(oppLang)}\n        </button>\n    </div>\n    <div class='introduction'>{translator.translate('introduction', currLang)}</div>\n  </div>\n\n  <div class='visualization'>\n\n    <div class='map-container'>\n\n      <div class='map' id='map'>\n       {#if !visualizationStarted}\n        <div class='map-play-button-overlay'>\n          <button class='btn map-play-button' on:click={startVisualization}>\n                  <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.57 127.1\">\n                      <defs>\n                          <style>\n                          .cls-play-1 {\n                              stroke: #000;\n                              fill: #000;\n                              stroke-miterlimit: 10;\n                          }\n                          </style>\n                      </defs>\n                      <g id=\"Layer_2\" data-name=\"Layer 2\">\n                          <g id=\"Layer_1-2\" data-name=\"Layer 1-2\">\n                          <path class=\"cls-play-1\" d=\"M106.78,74.45,19.36,124.92A12.57,12.57,0,0,1,.5,114V13.09A12.57,12.57,0,0,1,19.36,2.2l87.42,50.48a12.57,12.57,0,0,1,0,21.77Z\" transform=\"translate(0 -0.01)\"/>\n                          </g>\n                      </g>\n                  </svg>\n              </button>\n        </div>\n        {/if}\n        <div class='map-animation-date-container'>\n             <span class='animation-date'>\n                {translator.translate('seven_day_avg_on', currLang) + ': ' + translator.translateDate(frameData[currentFrame].date, currLang)}\n            </span>        \n        </div>\n        <div class='map-event-container'>\n            <EventInfoContainer \n                policyEvents={policyEvents}\n                appState={appState}\n                translator={translator}\n                currLang={currLang}\n            />         \n        </div>\n      </div>\n\n      <div class='map-scrubber-container'>\n          <Scrubber \n              updateAppState={updateAppState}\n              appState={appState}\n              currentTime={currentTime}\n              maxTime={maxTime}\n              isAnimationEnded={isAnimationEnded}\n              pauseAnimation={pauseAnimation} \n              startAnimation={startAnimation} \n              updateCurrentTime={updateCurrentTime}\n              frameData={frameData}\n              changePlaybackRate={changePlaybackRate}\n              policyEvents={policyEvents}\n              translator={translator}\n              currLang={currLang}\n          />\n      </div>\n\n    </div>\n   \n\n    <div class='map-aqi-legend'>\n      <AQILegend  \n        currentFrame={currentFrame} \n        frameData={frameData} \n        translator={translator}\n        currLang={currLang}\n      />\n    </div>\n  </div>\n\n</div>\n<div class='station-marker'></div>\n\n<style>\n\n.ub-ap-viz {\n  font-family: 'Open Sans', sans-serif;\n  color: #2B2D42;\n}\n\n.btn {\n    cursor: pointer\n}\n\n.btn:focus {\n    outline: none;\n}\n\n.btn:hover {\n    outline: none;\n    transform: scale(1.1);\n}\n\n.btn:active {\n    outline: none;\n    transform: scale(1.1);\n}\n\n/* HEADER STYLES */\n\n.header {\n  display: flex;\n  flex-direction: column;\n  /* border: 2px solid red; */\n}\n\n.title-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* background: #2B2D42;\n  color: white; */\n  height: 100px;\n  padding: 0 10px;\n  border-radius: 10px;\n}\n\n.title {\n  font-size: 20px;\n}\n\n.translate-button {\n  width: 50px;\n  height: 40px;\n  font-size: 30px;\n  color: white;\n  border: none;\n  border-radius: 15px;\n}\n\n.introduction {\n  padding: 5px;\n  font-size: 12px;\n}\n\n\n/* VISUALIZATION STYLES */\n\n.visualization {\n  display: flex;\n  flex-direction: row; /* in desktop */\n  height: 600px;\n  background-color: #2B2D42;\n  color: white;\n  border-radius: 10px;\n  padding: 20px 20px 10px 20px;\n} \n\n.visualization .map-container {\n  width: 80%; /* in desktop */\n  height: 100%;\n  /* border: 1px solid orangered; */\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.map-container .map {\n  height: 490px; /*desktop*/\n}\n\n.map-play-button-overlay {\n  position: absolute;\n  background-color: white;\n  opacity: 0.2;\n  height: 400px;\n  width: 100%;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.map-play-button {\n    height: 100px;\n    width: 100px;\n    border: none;\n    cursor: pointer;\n}\n\n.map-scrubber-container {\n    \n}\n\n.map-container .map .map-animation-date-container {\n    position: absolute; \n    left: 0; \n    right: 0; \n    bottom: 0;\n    margin-left: auto; \n    margin-right: auto; \n    max-width: 300px;\n    z-index: 100;\n    \n    font-size: 15px;\n    padding: 4px;\n    margin-bottom: 20px;\n    background: white;\n    opacity: .85;\n    border-radius: 4px;\n    text-align: center;\n    font-weight: 300;\n    color: #2B2D42;\n}\n\n.map-event-container {\n  position: absolute; \n  left: 5px; \n  top: 5px;\n  z-index: 100;\n}\n\n.visualization .map-aqi-legend {\n  width: 20%; /* in desktop */\n  height: 100%;\n}\n</style>",
    "<script>\n\n  import Icon from 'fa-svelte'\n  import { faSnowflake } from '@fortawesome/free-solid-svg-icons/faSnowflake';\n  import { faBook } from '@fortawesome/free-solid-svg-icons/faBook';\n  import { faSun } from '@fortawesome/free-solid-svg-icons/faSun';\n  import { faNewspaper } from '@fortawesome/free-solid-svg-icons/faNewspaper';\n  import { classnames } from './classnames';\n\nexport let eventDetails;\nexport let translator;\nexport let currLang;\n\nlet eventIcon = faBook;\nlet iconClass = 'icon-book';\nlet eventDateText = '';\n\n$: {\n    switch (eventDetails.type) {\n        case 'policy':\n            eventIcon = faBook\n            iconClass = 'icon-book';\n            break;\n        case 'ap_season_end':\n            eventIcon = faSun;\n            iconClass = 'icon-sun';\n            break;\n        case 'ap_season_start':\n            eventIcon = faSnowflake;\n            iconClass = 'icon-snowflake';\n            break;\n        case 'news':\n            eventIcon = faNewspaper;\n            iconClass = 'icon-newspaper';\n            break;\n        default:\n            eventIcon = faBook;\n            iconClass = 'icon-book';\n    }\n}\n\n</script>\n\n<div class='event-info-box'>\n    <div class={classnames('event-date', iconClass)}>\n        <Icon icon={eventIcon}></Icon>\n        <span class='event-date-text'>{translator.translateDate(eventDetails.date, currLang)}</span>\n    </div>\n    <div class='event-info-top'>\n        \n         <div class='event-title'>\n            <span>{translator.translate(eventDetails.title, currLang)}</span>\n        </div>\n        {#if !eventDetails.type.startsWith('ap_season')}\n        <div class='event-photo'>\n            <img src={eventDetails.imgSource} alt={''}>\n        </div>\n        {/if}\n    </div>\n    {#if !eventDetails.type.startsWith('ap_season')}\n    <div class='event-info-bottom'>\n        <div class='event-text'>\n            <span>{eventDetails.text}</span>\n        </div>\n        <div class='event-source'>\n            <a href={eventDetails.source} target=\"_blank\">Source</a>\n        </div>\n    </div>\n    {/if}\n   \n     \n</div>\n\n<style>\n    .event-info-box {\n        border: 1px solid #2B2D42;\n        font-family: 'Open Sans', sans-serif;\n        color: #2B2D42;\n        max-height: 400px;\n        width: 200px;\n        background: white;\n        border-radius: 4px;\n        display: flex;\n        flex-direction: column;\n        align-content: space-between;\n    }\n\n    .event-info-top {\n        padding: 5px 10px;\n    }\n\n    .event-date {\n        display: flex;\n        align-items: center;\n        font-size: 12px;\n        font-weight: bold;\n        background-color: #2B2D42;\n        padding: 5px 10px;\n    }\n\n    .event-date-text {\n        padding-left: 5px;\n        color: white;\n    }\n\n    .icon-book {\n        color: #c9c9c9;\n    }\n\n    .icon-sun {\n        color: #e3a005;\n    }\n\n    .icon-snowflake {\n        color: steelblue;\n    }\n\n    .icon-newspaper {\n        color: #c9c9c9;\n    }\n\n    .event-title {\n        font-size: 16px;\n        font-weight: lighter;\n        margin-bottom: 5px;\n    }\n\n    .event-text {\n        font-size: 11px;\n    }\n\n    .event-photo {\n        display: flex;\n        justify-content: center;\n        margin: 5px 0;\n    }\n\n    .event-photo img {\n        max-width: 100%;\n        max-height: 100%;\n        padding: 5px;\n    }\n\n    .event-info-bottom {\n        border-color: #2B2D42;\n        padding: 5px;\n    }\n\n    .event-source {\n        font-size: 11px;\n        font-style: italic;\n        cursor: pointer;\n        flex-grow: 2;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n    }\n\n    .event-source a {\n        text-align: end;\n    }\n\n\n</style>",
    "<script>\n    import { onMount } from 'svelte';\n    import EventInfoBox from './EventInfoBox.svelte';\n\n\n    export let policyEvents;\n    export let appState;\n    export let translator;\n    export let currLang;\n\n\n</script>\n\n<div class='event-info-container'>\n    {#if appState.currEventId != undefined}\n    <EventInfoBox \n        eventDetails={policyEvents[appState.currEventId]}\n        translator={translator}\n        currLang={currLang} \n    />\n    {/if}\n</div>\n\n<style>\n\n.event-info-container {\n    transition: all 2s;\n    opacity: 0.85;\n    box-shadow: 2px 2px 2px grey;\n}\n\n</style>",
    "<script>\n    import { styler, value, pointer, listen, transform, easing, keyframes } from 'popmotion';\n    import { onMount, tick } from 'svelte';\n    import EventInfoBox from './EventInfoBox.svelte';\n    import moment from 'moment';\n\n    export let currentScrubberPosition;\n    export let bufferRadius;\n    export let eventPosition;\n    export let eventDetails;\n    export let id;\n    export let pauseAnimation;\n    export let startAnimation;\n    export let updateAppState;\n    export let appState;\n    export let updateAnimationPosition;\n\n    const PAUSE_ON_EVENT_MS = 3000; \n\n\n//---- Position the policy dot and container according to their calculated position -----------\n\n    let policyDotStyler;\n    let policyDotContainerStyler\n\n    $: {\n        if (eventPosition > 0) {\n            policyDotContainerStyler.set('left', eventPosition);\n        }\n    }\n\n//---- Keep track of where the current event is relative to the event's highlighting/buffer zone. --------\n//---- Inside this buffer the event should highlight, outside it should diminish back to a dot. -------\n\n    eventPosition = 0;\n    let bufferStartPosition = 0;\n    let bufferEndPosition = 0;\n    let isEventHighlighted = false;\n\n    $: {\n        if (eventPosition > 0) {\n            bufferEndPosition = eventPosition + bufferRadius;\n            bufferStartPosition = eventPosition - bufferRadius;\n            if (eventDetails.type.startsWith('ap season')) bufferEndPosition += 15*bufferRadius;\n        }\n    }\n\n    $: { // When the scrubber enters the buffer zone, highlight\n        if (isScrubberWithinEventBuffer(currentScrubberPosition)) {\n            if (!isEventHighlighted) {\n                highlightEvent();\n            }\n        } else {\n            if (isEventHighlighted) {\n                diminishEvent();\n            }\n        }\n    }\n\n    const isScrubberWithinEventBuffer = (currentScrubberPosition) => {\n        if (currentScrubberPosition == 0) return false; // start position nothing should be open\n\n        return currentScrubberPosition >= bufferStartPosition &\n            currentScrubberPosition <= bufferEndPosition;\n    }\n\n//----- Animation specification for expanding and contractng the event -------------\n\n    const expandDuration = 400;\n    const contractDuration = 600;\n\n    let policyDotExpandKeyFrames =  keyframes({\n        values: [ \n            { scale: 1 },\n            { scale: 2 }\n        ],\n        times: [0, 1],\n        duration: expandDuration,\n        easings: [easing.easeOut]\n    });\n\n    let policyDotContractKeyFrames =  keyframes({\n        values: [ \n            { scale: 2 },\n            { scale: 1 }\n        ],\n        times: [0, 1],\n        duration: contractDuration,\n        easings: [easing.easeIn]\n    });\n\n\n    // To highlight the whole event, expand the dot and show the policy info box\n    const highlightEvent = () => {\n        isEventHighlighted = true;\n        console.log('HIGHLIGT', appState, id);\n        console.log();\n        updateAppState({currEventId: id});\n\n        policyDotExpandKeyFrames.start(style => {\n            policyDotStyler.set(style);\n        });\n        \n        \n        if (eventDetails.type != 'ap season') {\n            // pause the animation for a little to let the user read\n            pauseAnimation();\n            setTimeout(function() { startAnimation() }, PAUSE_ON_EVENT_MS);\n        } \n    }\n\n    // To diminish the whole event, contract the dot and hide the policy info box\n    const diminishEvent = async () => {\n        isEventHighlighted = false;\n\n        policyDotContractKeyFrames.start(style => {\n            policyDotStyler.set(style);\n        });\n        await tick();\n        console.log('DIMINISH', appState, id);\n        console.log();\n        if (appState.currEventId == id) { //so that it only unsets itself and not another event\n            updateAppState({currEventId: undefined});\n        }\n       \n    }\n\n    const handleClickPolicyDot = () => {\n        updateAnimationPosition(eventPosition, id);\n    }\n\n    onMount(async () => {\n        // Create a styler to style the policy dot - to control the dot's animation\n        const policyDot = document.querySelector(\".policy-dot\"+id);\n        policyDotStyler = styler(policyDot);\n\n        // Create a styler to style the dot container - to position the policy dot on the timeline\n        const policyDotContainer = document.querySelector(\".policy-dot-container\"+id);\n        policyDotContainerStyler = styler(policyDotContainer);\n        \n    });\n\n</script>\n\n<div class='policy-event'>\n    <div class={'policy-event-date policy-event-date'+id}>\n        <!-- {moment(eventDetails.date).format(\"MMMM YYYY\")} -->\n    </div>\n    <div class={\"policy-dot-container policy-dot-container\"+id}>\n        <div class={\"policy-dot-hit-area policy-dot-hit-area\"+id}>\n            <div class={\"policy-dot policy-dot\"+id} on:click={handleClickPolicyDot}></div>\n        </div>\n    </div>\n  \n</div>\n\n<style>\n\n\n    .policy-event-date {\n        position: absolute;\n        font-size: 13px;\n        top: 20%;\n        left: 50px; \n        transform: translateY(-50%) translateX(-50%);   \n    }\n\n    .policy-dot-container {\n        position: absolute;\n        top: 50%;\n        left: 50px; \n        transform: translateY(-50%) translateX(-50%);\n    }\n\n    .policy-dot-hit-area {\n        width: 10px;\n        height: 10px;\n    }\n\n    .policy-dot {\n        background:  #e3a005;\n        width: 8px;\n        height: 8px;\n        border: 2px solid black;\n        border-radius: 5px;\n        cursor: pointer;\n    }\n\n</style>",
    "<script>\n    import { onMount } from 'svelte';\n    import { styler, value, pointer, listen, transform, easing, keyframes } from 'popmotion';\n    import PolicyEvent from './PolicyEvent.svelte';\n    import moment from 'moment';\n    import { classnames } from './classnames.js';\n    import { select, selectAll } from 'd3-selection';\n    import { scaleLinear } from 'd3-scale';\n    import { axisBottom, axisRight } from 'd3-axis';\n    import { line } from 'd3-shape';\n    import { max } from 'd3-array';\n\n\n    export let frameData;\n    export let policyEvents;\n    export let currentTime;\n    export let maxTime;\n    export let pauseAnimation;\n    export let startAnimation;\n    export let updateCurrentTime;\n    export let isAnimationEnded;\n    export let changePlaybackRate;\n    export let translator;\n    export let currLang;\n    export let updateAppState;\n    export let appState;\n\n    const EVENT_BUFFER_TIME = 0.1; // how much time in seconds before and after to start showing an event\n\n    let isDragging = false; // is the user dragging the scrubber\n    let sliderWidth = 0;\n    let chartHeight = 0;\n    let maxScrubberWidth = 1000;// width of scrubber in px\n    let handleStyler;\n    let currPlayRate = 1;\n\n    $: {\n        maxScrubberWidth = sliderWidth;\n        addPm25TimeseriesChart(currLang); // when the sliderwidth has been updated\n    }\n\n\n    $: { // continuoslu check currentTime for where to place the scrubber handle\n        handleStyler && handleStyler.set('x', convertTimeToXPosition(currentTime));\n    }\n\n    $: {\n        if (isAnimationEnded) {\n            updateAppState({isUserRunning: false});\n        }\n    }\n\n    const convertTimeToXPosition =  (time) => {\n        return time * maxScrubberWidth / maxTime;\n    }\n\n    const convertXPositionToTime = (xPos) => {     \n        return !maxScrubberWidth ? 0 : xPos * maxTime / maxScrubberWidth;\n    }\n\n    onMount(async () => {\n        const slider = document.getElementById(\"slider\");\n        sliderWidth = slider.getBoundingClientRect().width;\n        chartHeight = document.getElementById(\"pm25-timeseries\").getBoundingClientRect().height;\n        const handle = document.querySelector('.handle-hit-area');\n        handleStyler = styler(handle);\n        const handleX = value(0, (newX) => {\n            updateCurrentTime(convertXPositionToTime(newX));\n        });\n    \n        const pointerX = (x) => pointer({ x }).pipe(xy => xy.x, transform.clamp(0, maxScrubberWidth));\n\n        const startDrag = () => {\n            isDragging = true;\n            pauseAnimation();\n            pointerX(convertTimeToXPosition(currentTime)).start(handleX);\n        };\n    \n        const stopDrag = () => {\n            if (!isDragging) return;\n            handleX.stop();\n            // convert from poistion to time\n            updateCurrentTime(convertXPositionToTime(handleStyler.get('x')));\n            appState.isUserRunning && startAnimation();\n            isDragging = false;\n        };\n\n        listen(handle, 'mousedown touchstart').start(startDrag);\n        listen(document, 'mouseup touchend').start(stopDrag);\n        document.addEventListener('keyup', event => {\n            if (event.code === 'Space') {\n                appState.isUserRunning ? handlePauseAnimation() : handleStartAnimation();\n            }\n        });\n    });\n\n    const handlePauseAnimation = () => {\n        updateAppState({isUserRunning: false});\n        pauseAnimation();\n    }\n\n    const handleStartAnimation = () => {\n        updateAppState({isUserRunning: true});\n        startAnimation();\n    }\n\n    const handlePolicyPause = () => {\n        if (appState.isUserRunning) pauseAnimation();\n    }\n\n    const handlePolicyStart = () => {\n         if (appState.isUserRunning) startAnimation();\n    }\n\n    const handleUpdateAnimationPosition = (policyEventPosition, eventId) => {\n        updateCurrentTime(convertXPositionToTime(policyEventPosition));\n    }\n\n    const handleChangePlaybackRate = (playRate) => {\n        currPlayRate = playRate;\n        changePlaybackRate(playRate);\n    }\n\n    let startDate = moment(frameData[0].date);\n    let endDate = moment(frameData[frameData.length-1].date);\n    let totalDays = endDate-startDate;\n\n    const getPolicyEventPosition = (policyDate) => {\n        let policyDays = moment(policyDate)-startDate;\n        return policyDays/totalDays;\n    }\n\n    const addPm25TimeseriesChart = (currLang) => {\n\n        // clean slate for rerender\n        let svg_old = select(\"#pm25-timeseries\");\n        svg_old.selectAll('*').remove();\n\n        let margin = {top: 10, right: 0, bottom: 10, left: 0},\n            width = maxScrubberWidth - margin.left - margin.right, // CHANGE WIDTH TO WIDTH OF SCRUBBER\n            height = chartHeight - margin.top - margin.bottom;\n        \n        let inner_width  = width - margin.left - margin.right;\n\n        \n        let svg = select(\"#pm25-timeseries\")\n                .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .style(\"overflow-x\", \"overlay\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        //---- Add X axis ----------------\n        var xAxisScale = scaleLinear()\n            .domain([0, frameData.length-1]) // length of the timeseries\n            .range([ 0, width ]);\n\n        let xAxis = axisBottom(xAxisScale)\n            .tickFormat(x => translator.translate(moment(frameData[x].date).format(\"MMMM\"), currLang))\n            .tickSizeOuter(0);    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n\n        //---- Add Y axis ----------------\n        // 1. create scale\n        let yAxisScale = scaleLinear()\n            .domain(\n                [0, max(frameData.map(function(frame) {return frame.pm25}))]\n            )\n            .range([ height, 0]);\n        // 2. format\n        let yAxis = axisRight(yAxisScale).ticks(3).tickValues([55,150,250]).tickSizeOuter(0);  \n\n        //---- Add Y axis gridlines\n        let yAxisGrid = axisRight(yAxisScale)\n            .tickSize(inner_width)\n            .tickFormat('')\n            .ticks(3)\n            .tickValues([55,150,250])\n            .tickSizeOuter(0);\n\n\n        svg.append(\"g\")\n        .attr('class', 'y-axis-grid')\n        .style(\"stroke-dasharray\", \"3 3\")\n        .style('opacity', '0.15')\n        .call(yAxisGrid); \n    \n\n        //----- Add the line -----------\n        svg.append(\"path\")\n            .datum(frameData)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", line()\n                .x(function(frame) { return xAxisScale(frameData.indexOf(frame)) })\n                .y(function(frame) { return yAxisScale(frame.pm25) })\n            );\n\n        //---- Add ticks on top of the line ----\n        svg.append(\"g\")\n         .call(yAxis);\n    }\n\n    const displayTime = (timeNow, timeTotal) => {\n        const duration = moment.duration(timeNow, 'seconds');\n        const formatted = moment.utc(duration.asMilliseconds()).format(\"m:ss\");\n        return formatted;\n    }\n</script> \n\n\n<div class=\"scrubber\">\n    <div class='pm25-chart-title'>{translator.translate('pm25_mov_avg_title', currLang)}</div>\n    <div class='pm25-chart' id='pm25-timeseries'>\n\n    </div>\n    <div class=\"slider\" id=\"slider\">\n        <div class=\"range\"></div>\n\n        <div class=\"handle-container\">\n            <div class=\"handle-hit-area\">\n                <div class=\"handle\"></div>\n            </div>\n        </div>\n\n        {#each policyEvents as policyEvent, i}\n            <PolicyEvent \n                currentScrubberPosition={convertTimeToXPosition(currentTime)} \n                eventPosition={Math.round(sliderWidth * getPolicyEventPosition(policyEvent.date))}\n                eventDetails={policyEvent}\n                bufferRadius={EVENT_BUFFER_TIME * maxScrubberWidth / maxTime}\n                id={i}\n                pauseAnimation={handlePolicyPause} \n                startAnimation={handlePolicyStart} \n                updateAppState={updateAppState}\n                appState={appState}\n                updateAnimationPosition={handleUpdateAnimationPosition}\n            />\n    \n        {/each}\n        \n    </div>\n    <div class='scrubber-controls'>\n        <div class='control-button-container'>\n            {#if appState.isUserRunning} \n            <button class='pause-button play-button' on:click={handlePauseAnimation}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71 135\">\n                    <defs>\n                        <style>\n                        .cls-pause-1 {\n                            stroke: steelblue;\n                            fill: steelblue;\n                            stroke-miterlimit: 10;\n                        }\n                        </style>\n                    </defs>\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1-2\">\n                        <path class=\"cls-pause-1\" d=\"M10.5.5h0a10,10,0,0,1,10,10v114a10,10,0,0,1-10,10h0a10,10,0,0,1-10-10V10.5A10,10,0,0,1,10.5.5Z\"/>\n                        <path class=\"cls-pause-1\" d=\"M60.5.5h0a10,10,0,0,1,10,10v114a10,10,0,0,1-10,10h0a10,10,0,0,1-10-10V10.5A10,10,0,0,1,60.5.5Z\"/>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n            {:else}\n            <button class='start-button play-button' on:click={handleStartAnimation}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.57 127.1\">\n                    <defs>\n                        <style>\n                        .cls-play-1 {\n                            stroke: #000;\n                            fill: steelblue;\n                            stroke-miterlimit: 10;\n                        }\n                        </style>\n                    </defs>\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1-2\">\n                        <path class=\"cls-play-1\" d=\"M106.78,74.45,19.36,124.92A12.57,12.57,0,0,1,.5,114V13.09A12.57,12.57,0,0,1,19.36,2.2l87.42,50.48a12.57,12.57,0,0,1,0,21.77Z\" transform=\"translate(0 -0.01)\"/>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n            {/if}\n            <div class='speed-buttons-container'>\n                <button class={classnames('speed-button', currPlayRate == 0.5 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(0.5)}>{'0.5x'}</button>\n                <button class={classnames('speed-button', currPlayRate == 1 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(1)}>{'1x'}</button>\n                <button class={classnames('speed-button', currPlayRate == 2 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(2)}>{'2x'}</button>\n            </div>\n         </div>\n         <div class='current-time-display'>\n            {`${displayTime(currentTime)} / ${displayTime(maxTime)}`}\n         </div>\n    </div>\n</div>\n\n<style>\n    .scrubber {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        position: relative;\n    }\n\n    .pm25-chart-title {\n        position: absolute;\n        top: 10px;\n        left: 10%;\n        font-size: 10px;\n        font-weight: 100;\n    }\n\n    .pm25-chart {\n        height: 100px;\n    }\n\n\n    /* CONTROLS SECTION */\n    .scrubber-controls {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 40px;\n    }\n\n    .control-button-container {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        color: steelblue;\n    }\n\n    .speed-buttons-container {\n        display: flex;\n        width: auto;\n        justify-content: space-between;\n    }\n\n    .speed-button {\n        width: 45px;\n        margin-right: 5px;\n        \n        background: none;\n        color: white;\n        border-radius: 4px;\n\n        border: 1px solid steelblue; /*#47B3F2;*/\n        height: 20px;\n        cursor: pointer;\n\n    }\n\n    .speed-button-selected {\n        background-color: steelblue;\n        border: 1px solid steelblue;\n    }\n\n    .speed-button:focus {\n        outline: none;\n    }\n\n    .speed-button:active {\n        outline: none;\n        transform: scale(1.1);\n    }\n\n    .speed-button:hover {\n        transform: scale(1.1);\n    }\n\n    .current-time-display {\n        font-size: 15px;\n        font-weight: lighter;\n    }\n\n    .play-button svg {\n        height: 25px;\n    }\n\n    /* CONTROL BUTTON STYLING */\n    .play-button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: none;\n        border: none;\n        cursor: pointer;\n        height: 30px;\n        width: 45px;\n        margin-right: 10px;\n    }\n\n    .play-button:hover {\n        transform: scale(1.1);\n        /* border: 1px solid steelblue;\n        border-radius: 4px; */\n    }\n\n    .play-button:focus {\n        outline: none;\n    }\n\n    .play-button:active {\n        outline: none;\n        transform: scale(1.3);\n    }\n    \n    \n     /* SLIDER SECTION */\n    .slider {\n        height: 40px;\n        margin-top: 25px;\n        margin-bottom: 5px;\n        position: relative;\n    }\n\n    .range {\n        border-radius: 2px;\n        height: 4px;\n        background: black;\n        position: absolute;\n        top: 50%;\n        left: 0;\n        right: 0;\n        transform: translateY(-50%);\n    }\n\n    .handle-container {\n        position: absolute;\n        top: 50%;\n        left: 0%;\n        transform: translateY(-50%) translateX(-50%);\n    }\n\n    .handle-hit-area {\n        padding: 5px 20px;\n        width: 5px;\n        height: 40px;\n        cursor: pointer;\n    }\n\n    .handle {\n        background: red;\n        width: 5px; \n        height: 40px;\n        cursor: pointer;\n    }\n\n</style>\n\n",
    "<script>\n    import { scaleLinear} from 'd3-scale'\n\n    export let currentFrame;\n    export let frameData;\n\n    const MAX_HEIGHT = 534; // total height of mercury rect - DO NOT CHANGE\n    const MIN_HEIGHT = 105; // how far the mercury rect dips below the mercury circle -DO NOT CHANGE\n    const HEIGHT_CHANGE = MAX_HEIGHT-MIN_HEIGHT; // 429\n\n    const TOPMOST_Y = 17; // DO NOT CHANGE - mercury of thermometer starts at y=17px and moves down\n    const BOTTOMMOST_Y = TOPMOST_Y + HEIGHT_CHANGE;\n\n    const tempScale = [-40, -20, 5, 15, 30, 40];\n\n    var scaleTempToPixels = scaleLinear().domain([-40, 40]).range([0, HEIGHT_CHANGE]);\n    scaleTempToPixels.clamp(true);\n\n    let pixelChangeFromBaseline = 0; // -40 C to start \n    let height = MIN_HEIGHT;\n    let starting_y = BOTTOMMOST_Y;\n    let tempColor = '#a81e1e';\n    let currentTemp = 0;\n\n    $: {\n        currentTemp = Math.round(frameData[currentFrame].temp);\n        pixelChangeFromBaseline = scaleTempToPixels(currentTemp);\n        height = MIN_HEIGHT + pixelChangeFromBaseline;\n        starting_y = BOTTOMMOST_Y - pixelChangeFromBaseline;\n    }\n\n</script>\n\n<div class='thermometer'>\n<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 184 613\">\n  <defs>\n    <style>\n      .cls-1 {\n        fill: rgba(255, 255, 255, 0.521);\n      }\n\n      .cls-2 {\n        fill: none;\n        stroke: #2B2D42;\n        stroke-miterlimit: 10;\n        stroke-width: 3px;\n        \n      }\n\n      .cls-4 {\n        font-size: 45px;\n        font-weight: bold;\n        letter-spacing: 0em;\n        stroke-width: 1px;\n        stroke: #8a2121;\n      }\n    </style>\n  </defs>\n  <g>\n    <path class=\"cls-1\" d=\"M694,689a91,91,0,0,1-59-160.28V137a59,59,0,1,1,118,0V528.72A91,91,0,0,1,694,689Z\" transform=\"translate(-602 -77)\"/>\n    <path class=\"cls-2\" d=\"M694,689a91,91,0,0,1-59-160.28V137a59,59,0,1,1,118,0V528.72A91,91,0,0,1,694,689Z\" transform=\"translate(-602 -77)\"/>\n  </g>\n  <rect class=\"cls-3\" fill={tempColor} x=\"49\" y={starting_y} width=\"86\" height={height} rx=\"43\"/>\n  <!-- Full Thermometer DO NOT CHANGE -->\n  <!-- <rect class=\"cls-3\" x=\"49\" y=\"17\" width=\"86\" height=\"534\" rx=\"43\"/> -->\n  <circle class=\"cls-3\" fill={tempColor} cx=\"92\" cy=\"521\" r=\"75\"/>\n  <text class=\"cls-4\"  fill={'#fff'} transform=\"translate(0 532)\" x=\"50%\" text-anchor=\"middle\">{currentTemp}Â°C</text>\n</svg>\n</div>\n\n<style>\n\n.thermometer {\n    padding: 5px;\n    width: 100%;\n    box-sizing: border-box;\n}\n\n</style>",
    "<svg\r\n  aria-hidden=\"true\"\r\n  class=\"{classes}\"\r\n  role=\"img\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"{viewBox}\"\r\n>\r\n  <path fill=\"currentColor\" d=\"{path}\" />\r\n</svg>\r\n<script>\r\n  export let icon;\r\n\r\n  let path = [];\r\n  let classes = \"\";\r\n  let viewBox = \"\";\r\n\r\n  $: viewBox = \"0 0 \" + icon.icon[0] + \" \" + icon.icon[1];\r\n\r\n  $: classes = \"fa-svelte \" + ($$props.class ? $$props.class : \"\");\r\n\r\n  $: path = icon.icon[4];\r\n</script>\r\n\r\n<style>\r\n  .fa-svelte {\r\n    width: 1em;\r\n    height: 1em;\r\n    overflow: visible;\r\n    display: inline-block;\r\n  }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAoJA,UAAU,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,YAAY,cAAC,CAAC,AACV,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,OAAO,CACd,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,GAAG,CAAC,GAAG,AACpB,CAAC,AAED,+BAA+B,cAAC,CAAC,AAC7B,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,AACtB,CAAC,AAED,2BAA2B,cAAC,CAAC,AACzB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,IAAI,AACrB,CAAC,AAED,WAAW,cAAC,CAAC,AACT,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACf,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,YAAY,CAAE,GAAG,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,cAAc,CAC9B,eAAe,CAAE,aAAa,CAC9B,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,oBAAoB,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,QAAQ,CACrB,WAAW,CAAE,IAAI,AACrB,CAAC,AAED,uBAAuB,cAAC,CAAC,AACrB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,uBAAuB,cAAC,CAAC,AACrB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,uBAAuB,cAAC,CAAC,AACrB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACf,KAAK,CAAE,GAAG,AACd,CAAC,AAED,kBAAkB,cAAC,CAAC,AAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACrB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,gBAAgB,cAAC,CAAC,AACd,YAAY,CAAE,GAAG,CACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AAED,QAAQ,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACf,CAAC,AAED,cAAc,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,AACpB,CAAC,AAID,sBAAsB,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CAAC,CAAC,AACjB,CAAC,AAED,0BAA0B,cAAC,CAAC,AACxB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,sBAAsB,cAAC,CAAC,AACpB,KAAK,CAAE,IAAI,AACf,CAAC,AAED,6BAA6B,cAAC,CAAC,AAC3B,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,8BAA8B,cAAC,CAAC,AAC5B,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,cAAc,CAAE,GAAG,AACvB,CAAC;AClPE,eAAe,eAAC,CAAC,AACd,KAAK,CAAE,OAAO;GACjB,CAAC;ACkRJ,UAAU,8BAAC,CAAC,AACV,WAAW,CAAE,WAAW,CAAC,CAAC,UAAU,CACpC,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,IAAI,8BAAC,CAAC,AACF,MAAM,CAAE,OAAO;AACnB,CAAC,AAED,kCAAI,MAAM,AAAC,CAAC,AACR,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,kCAAI,MAAM,AAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AAED,kCAAI,OAAO,AAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AAID,OAAO,8BAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AAExB,CAAC,AAED,gBAAgB,8BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CAGnB,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,iBAAiB,8BAAC,CAAC,AACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,aAAa,8BAAC,CAAC,AACb,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,AACjB,CAAC,AAKD,cAAc,8BAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,AAC9B,CAAC,AAED,6BAAc,CAAC,cAAc,eAAC,CAAC,AAC7B,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CAEZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,6BAAc,CAAC,IAAI,eAAC,CAAC,AACnB,MAAM,CAAE,KAAK,AACf,CAAC,AAED,wBAAwB,8BAAC,CAAC,AACxB,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,gBAAgB,8BAAC,CAAC,AACd,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,uBAAuB,8BAAC,CAAC,AAEzB,CAAC,AAED,6BAAc,CAAC,IAAI,CAAC,6BAA6B,eAAC,CAAC,AAC/C,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CAEZ,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OAAO,AAClB,CAAC,AAED,oBAAoB,8BAAC,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,GAAG,CACR,OAAO,CAAE,GAAG,AACd,CAAC,AAED,6BAAc,CAAC,eAAe,eAAC,CAAC,AAC9B,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,AACd,CAAC;AC5WG,eAAe,4BAAC,CAAC,AACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,WAAW,CAAC,CAAC,UAAU,CACpC,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,aAAa,AAChC,CAAC,AAED,eAAe,4BAAC,CAAC,AACb,OAAO,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC,AAED,WAAW,4BAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC,AAED,gBAAgB,4BAAC,CAAC,AACd,YAAY,CAAE,GAAG,CACjB,KAAK,CAAE,KAAK,AAChB,CAAC,AAED,UAAU,4BAAC,CAAC,AACR,KAAK,CAAE,OAAO,AAClB,CAAC,AAED,SAAS,4BAAC,CAAC,AACP,KAAK,CAAE,OAAO,AAClB,CAAC,AAED,eAAe,4BAAC,CAAC,AACb,KAAK,CAAE,SAAS,AACpB,CAAC,AAED,eAAe,4BAAC,CAAC,AACb,KAAK,CAAE,OAAO,AAClB,CAAC,AAED,YAAY,4BAAC,CAAC,AACV,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,OAAO,CACpB,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,WAAW,4BAAC,CAAC,AACT,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,YAAY,4BAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,GAAG,CAAC,CAAC,AACjB,CAAC,AAED,0BAAY,CAAC,GAAG,cAAC,CAAC,AACd,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,kBAAkB,4BAAC,CAAC,AAChB,YAAY,CAAE,OAAO,CACrB,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,aAAa,4BAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,CAAC,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,QAAQ,AAC7B,CAAC,AAED,2BAAa,CAAC,CAAC,cAAC,CAAC,AACb,UAAU,CAAE,GAAG,AACnB,CAAC;ACvIL,qBAAqB,cAAC,CAAC,AACnB,UAAU,CAAE,GAAG,CAAC,EAAE,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AAChC,CAAC;ACkIG,kBAAkB,cAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,AAChD,CAAC,AAED,qBAAqB,cAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,AAChD,CAAC,AAED,oBAAoB,cAAC,CAAC,AAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,WAAW,cAAC,CAAC,AACT,UAAU,CAAG,OAAO,CACpB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,AACnB,CAAC;ACsHD,SAAS,4BAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,AACtB,CAAC,AAED,iBAAiB,4BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,WAAW,4BAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AAID,kBAAkB,4BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,yBAAyB,4BAAC,CAAC,AACvB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,SAAS,AACpB,CAAC,AAED,wBAAwB,4BAAC,CAAC,AACtB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,aAAa,AAClC,CAAC,AAED,aAAa,4BAAC,CAAC,AACX,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CAEjB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,CAElB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC3B,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AAEnB,CAAC,AAED,sBAAsB,4BAAC,CAAC,AACpB,gBAAgB,CAAE,SAAS,CAC3B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,AAC/B,CAAC,AAED,yCAAa,MAAM,AAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,yCAAa,OAAO,AAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AAED,yCAAa,MAAM,AAAC,CAAC,AACjB,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AAED,qBAAqB,4BAAC,CAAC,AACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,OAAO,AACxB,CAAC,AAED,0BAAY,CAAC,GAAG,cAAC,CAAC,AACd,MAAM,CAAE,IAAI,AAChB,CAAC,AAGD,YAAY,4BAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,IAAI,AACtB,CAAC,AAED,wCAAY,MAAM,AAAC,CAAC,AAChB,SAAS,CAAE,MAAM,GAAG,CAAC,AAGzB,CAAC,AAED,wCAAY,MAAM,AAAC,CAAC,AAChB,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,wCAAY,OAAO,AAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,GAAG,CAAC,AACzB,CAAC,AAID,OAAO,4BAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,QAAQ,AACtB,CAAC,AAED,MAAM,4BAAC,CAAC,AACJ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,AAC/B,CAAC,AAED,iBAAiB,4BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,EAAE,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,AAChD,CAAC,AAED,gBAAgB,4BAAC,CAAC,AACd,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,OAAO,4BAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,AACnB,CAAC;AC7XL,YAAY,eAAC,CAAC,AACV,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,UAAU,AAC1B,CAAC;ACpDC,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,YAAY,AACvB,CAAC"
}