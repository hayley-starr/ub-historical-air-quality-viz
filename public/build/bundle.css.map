{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../AQILegend.svelte",
    "../../App.svelte",
    "../../EventInfoBox.svelte",
    "../../PolicyEvent.svelte",
    "../../Scrubber.svelte",
    "../../Thermometer.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Thermometer from './Thermometer.svelte';\n    import { onMount } from 'svelte';\n    import { scaleLinear } from 'd3-scale'\n    import { quantize, interpolate } from 'd3-interpolate'\n    import { create } from 'd3-selection';\n    import { axisRight } from 'd3-axis';\n\n    export let currentFrame;\n    export let frameData;\n\n    let green_color = '#93c947'; //green\n    let red_color = '#f0004c'; //red\n    let orange_red_color = '#fc6203';\n    let yellow_color = '#ebc505';\n    let green_yellow_color = '#d7e01d'\n    let orange_color = '#fc9d03';\n    let red_purple_color = '#d921d0';\n    let purple_color = '#5e03fc';\n    let dark_purple_color = '#4b1f7a';\n    let black_color = '#050505';\n\n    const airQualityScale = [0, 12, 35, 55, 150, 250, 450, 500]; // this is up for changing!\n    let airQualityScaleTicks = [12, 35, 55, 150, 250, 500]; // this is up for changing!\n    const colorScale = [green_color, // <12\n            yellow_color, // <35\n            orange_color, // <55\n            red_color, // <150\n            purple_color, // < 250\n            dark_purple_color, // < 500\n            dark_purple_color, // < 550\n            black_color]; //> 550\n\n//---- Create Color Scale ----------------------\n\n    var color = scaleLinear().domain(airQualityScale).range(colorScale);\n    color.clamp(true);\n\n    let width = 30;\n    let height = 200;\n    let marginTop = 0;\n    let marginRight = 0;\n    let marginBottom = 0;\n    let marginLeft = 0;    \n\n    function ramp(color) {\n        let n = height;\n        const canvas = document.getElementById(\"pm25-scale\");\n        canvas.height = height;\n        canvas.width = width;\n        const context = canvas.getContext(\"2d\");\n        \n        for (let i = 0; i < n; ++i) {\n            context.fillStyle = color((n-1-i) / (n - 1));\n            context.fillRect(0, i, width, height);\n        }\n        \n        return canvas;\n    }\n\n    // Create the svg that will display the legend\n    const svg = create(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    // Get the length over which to quantize\n    const n = Math.min(color.domain().length, color.range().length);\n    let x = color.copy().rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n   \n    onMount(async () => {\n        svg.append(\"image\")\n        .attr(\"x\", marginLeft)\n        .attr(\"y\", marginTop)\n        .attr(\"width\", width - marginLeft - marginRight)\n        .attr(\"height\", height - marginTop - marginBottom)\n        .attr(\"preserveAspectRatio\", \"none\")\n        .attr(\"xlink:href\", ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL());\n    });\n\n\n\n</script>\n\n<div class='ap-legend'>\n    <div class='legend-tile ap-legend-pm25-scale-container'>\n        <canvas class='pm25-scale' id='pm25-scale'></canvas>\n        <div class='pm25-scale-ticks'>\n            {#each airQualityScaleTicks as tick}\n                <div>{'-' + tick + ' Î¼g/m3'} </div>\n            {/each}\n\n\n        </div>\n    </div>\n\n    \n     <div class='legend-tile basemap-options'>\n        <div class='ap-legend-stations'>\n            <div class='ap-station-container'>\n                <div class='ap-station-marker'></div>\n            </div>\n            <div>{'Air Quality Sensor Location'}</div>\n        </div>\n\n         <button class='button-switch-basemap'>Switch to Satellite View</button>\n    </div>\n     <div class='legend-tile thermometer-container'>\n        <Thermometer \n            currentFrame={currentFrame} \n            frameData={frameData}\n        />\n    </div>\n    \n</div>\n\n<style>\n.ap-legend {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    min-width: 75px;\n    padding-left: 10px;\n}\n\n.legend-tile {\n    background-color: white;\n    color: #2B2D42;\n    border-radius: 4px;\n    margin-bottom: 10px;\n    padding: 5px 5px;\n}\n\n.ap-legend-pm25-scale-container {\n    display: flex;\n}\n\n.pm25-scale-ticks {\n    height: 200px;\n    font-size: 10px;\n    padding-left: 5px;\n    display: flex;\n    flex-direction: column-reverse;\n    justify-content: space-evenly;\n}\n\n.ap-legend-stations {\n    display: flex;\n    font-size: 14px;\n    flex-direction: row;\n    justify-content: space-around;\n}\n\n.ap-station-container {\n    padding: 4px;\n}\n\n.ap-station-marker {\n    height: 7px;\n    width: 7px;\n    background-color: black;\n    border-radius: 3.5px;\n}\n\n.button-switch-basemap {\n    margin: 5px 0;\n}\n\n.thermometer-container {\n    height: 200px;\n}\n\n</style>",
    "<link href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet' />\n<link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700;800&display=swap\" rel=\"stylesheet\">\n\n<script>\n  import { onMount } from 'svelte';\n  import mapboxgl from 'mapbox-gl';\n  import { stations } from './stations_geojson.js';\n  import Scrubber from './Scrubber.svelte' \n  import AQILegend from './AQILegend.svelte';\n  import AnimationDate from './AnimationDate.svelte';\n  import moment from 'moment';\n  import { frameData } from './frameData.js';\n\n\n  const UB_COORDINATES = [106.900354, 47.917802];\n  const MAPBOX_TOKEN = 'pk.eyJ1IjoiaGF5bGV5c3RhcnIiLCJhIjoiY2s5MmhvYTU3MDBkaTNwcGI3cWJtMjdkcCJ9.tOfFfs9wWWcOfQ1sDMiwvQ';\n  mapboxgl.accessToken = MAPBOX_TOKEN;\n  const FRAME_CHECKING_RATE = 33; // check every x ms what the current time is in the video\n\n  let map;\n\n  let currentTime = 0;\n  let currentFrame = 0;\n\n//---------- Translate current time in video to the number of the current frame ----\n\n  let maxTime = 0; // will reset when video loads\n  let maxFrame = frameData.length-1; \n  let timeToFrameMultiplier = 0;\n  $: timeToFrameMultiplier = maxTime > 0 ? maxFrame / maxTime : 0;\n  $: currentFrame = Math.round(timeToFrameMultiplier * currentTime);\n\n\n//----------- Logic for playing and pausing the animation -------------------------\n  let animationPaused = true;\n  let isAnimationEnded = false;\n\n  const pauseAnimation = () => {\n    animationPaused = true;\n    map.getSource('ap_video').pause();\n  }\n\n  const startAnimation = () => {\n    animationPaused = false;\n    isAnimationEnded = false;\n    map.getSource('ap_video').play();\n  }\n\n  // set the currentTime to what the video is showing so that the dependent components stay up to date\n  const reportCurrentTime = (updateWhilePaused) => {\n    if (!animationPaused | updateWhilePaused) {\n      currentTime = map && map.getSource('ap_video') && map.getSource('ap_video').video.currentTime;\n      if (currentTime >= maxTime) {\n        isAnimationEnded = true;\n      }\n    }\n  }\n\n  const updateCurrentTime = (time) => {\n    if (map && map.getSource('ap_video')) {\n      map.getSource('ap_video').seek(time);\n      reportCurrentTime(true);\n    }\n  }\n\n  const changePlaybackRate = (playRate) => {\n    console.log('changing playback rate to: ' + playRate);\n    map.getSource('ap_video').video.playbackRate = playRate;\n  }\n\n\n  let green_color = '#87e32b'; //green\n  let red_color = '#f0004c'; //red\n  let yellow_color = '#ebc505'; \n  let blue_color = '#027ef2';\n  let white_color = '#ffffff';\n  let orange_color = '#fc9d03';\n  let purple_color = '#5e03fc';\n  let dark_purple_color = '#4b1f7a';\n  let black_color = '#050505';\n\n//------ Setting up Mapbox layers ---------------------------------\n\n  // After the DOM has been rendered set up the mapbox. (Won't work before map html is available.)\n\tonMount(async () => {\n\t\tmap = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v9',\n        // style: 'mapbox://styles/mapbox/satellite-v9',\n        center: UB_COORDINATES, // starting position\n        zoom: 11 // starting zoom\n      });\n    \n    \n    map.on('load', function() { // what to do when the map is first loaded on the page\n      addVideoLayer();\n      addUncertaintyMaskLayer();\n      addStationLayer();\n\n      //cannot access the video right away due to some mapbox strangeness\n      const waiting = () => {\n        if (!map.isStyleLoaded()) {\n          setTimeout(waiting, 200);\n        } else {\n          map.getSource('ap_video').pause();\n          let videoSource = map.getSource('ap_video');\n          videoSource.video.loop = false;\n          maxTime = videoSource.video.duration;\n          var intervalTimer = setInterval(reportCurrentTime, FRAME_CHECKING_RATE);\n        }\n      };\n      waiting();\n        \n    });\n  });\n\n  const addVideoLayer = () => {\n    map.addSource('ap_video', {\n       \"type\": \"video\",\n       \"urls\": [\n        \"videos/pm25_over_ub.mp4\",\n       ],\n      \"coordinates\": [ // these must be exactly the extent of the raster frames in R!!\n          [106.6907, 48.03644],\n          [107.1107, 48.03644],\n          [107.1107, 47.82644],\n          [106.6907, 47.82644]\n      ]\n    });\n\n    map.addLayer({\n      id: 'ap_video',\n      type: 'raster',\n      source: 'ap_video',\n       paint: {\n          'raster-opacity': 0.3\n       }\n    });\n\n    map.on(\"click\", function() {\n      console.log(map.getSource(\"ap_video\"));\n    });\n  }\n\n  const addUncertaintyMaskLayer = () => {\n    map.addSource('ap_uncertainty', {\n          \"type\": \"image\",\n          \"url\": \"imgs/uncertainty_mask_img.png\",\n          \"coordinates\": [ // these must be exactly the extent of the raster frames in R!!\n              [106.6907, 48.03644],\n              [107.1107, 48.03644],\n              [107.1107, 47.82644],\n              [106.6907, 47.82644]\n          ]\n        });\n\n        map.addLayer({\n          id: 'ap_uncertainty',\n          type: 'raster',\n          source: 'ap_uncertainty'\n        });\n  }\n\n\n  const addStationLayer = () => {\n    stations.features.forEach(station => {\n      const lon = station.geometry.coordinates[0];\n      const lat = station.geometry.coordinates[1];\n      const el = document.createElement('div');\n\n      // this is a hack! have to update the style in AQILegend for the aqi-station-marker if you change this\n      el.className = 'station-marker';\n      el.style.height = '7px';\n      el.style.width = '7px';\n      el.style.backgroundColor = 'black';\n      el.style.borderRadius= '3.5px';\n      const stationMarker = new mapboxgl.Marker(el)\n                  .setLngLat([lon, lat])\n                  .addTo(map);\n    });            \n  }\n\n  const setBaseLayer = () => {\n    map.setStyle('mapbox://styles/mapbox/satellite-v9');\n  }\n\n</script>\n\n\n<div class='ub-ap-viz'>\n\n  <div class='header'>\n    <div class='title'>\n      <h1>Visualzing Air Pollution and Policy in Ulaanbaatar</h1>\n    </div>\n  </div>\n\n  <div class='visualization'>\n\n    <div class='map-container'>\n      <div class='map' id='map'>\n        <div class='map-animation-date-container'>\n            <AnimationDate\n              currentFrame={currentFrame} \n              frameData={frameData} \n            />          \n        </div>\n      </div>\n\n      <div class='map-scrubber-container'>\n          <Scrubber \n              currentTime={currentTime}\n              maxTime={maxTime}\n              isAnimationEnded={isAnimationEnded}\n              pauseAnimation={pauseAnimation} \n              startAnimation={startAnimation} \n              updateCurrentTime={updateCurrentTime}\n              frameData={frameData}\n              changePlaybackRate={changePlaybackRate}\n          />\n      </div>\n\n    </div>\n   \n\n    <div class='map-aqi-legend'>\n      <AQILegend  \n        currentFrame={currentFrame} \n        frameData={frameData} \n      />\n    </div>\n  </div>\n\n</div>\n<div class='station-marker'></div>\n\n<style>\n\n.ub-ap-viz {\n  font-family: 'Open Sans', sans-serif;\n}\n\n/* HEADER STYLES */\n\n.header {\n  display: flex;\n  flex-direction: column;\n  /* border: 2px solid red; */\n}\n\n.header .title {\n  /* border: 1px solid pink; */\n}\n\n\n/* VISUALIZATION STYLES */\n\n.visualization {\n  display: flex;\n  flex-direction: row; /* in desktop */\n  height: 600px;\n  background-color: #2B2D42;\n  color: white;\n  border-radius: 10px;\n  padding: 20px;\n} \n\n.visualization .map-container {\n  width: 80%; /* in desktop */\n  height: 605px;\n  /* border: 1px solid orangered; */\n  display: flex;\n  flex-direction: column;\n}\n\n.map-container .map {\n  /* border: 2px solid red; */\n  height: 490px; /*desktop*/\n}\n\n.map-scrubber-container {\n    \n}\n\n.map-container .map .map-animation-date-container {\n    position: absolute; \n    left: 0; \n    right: 0; \n    bottom: 0;\n    margin-left: auto; \n    margin-right: auto; \n    width: 200px;\n    z-index: 100;\n    \n    font-size: 20px;\n    font-weight: bold;\n    padding: 4px;\n    margin-bottom: 20px;\n\n\n}\n\n.visualization .map-aqi-legend {\n  width: 20%; /* in desktop */\n  height: 100%;\n}\n</style>",
    "<script>\n\nexport let eventDetails;\n\n</script>\n\n<div class='policy-info-box'>\n    <div class='policy-info-top'>\n        <div class='policy-event-date'>\n            <span>{eventDetails.date}</span>\n        </div>\n         <div class='policy-event-title'>\n            <span>{eventDetails.title}</span>\n        </div>\n        <div class='policy-event-photo'>\n            <img src={eventDetails.imgSource} alt={'Ban on Raw Coal'}>\n        </div>\n    </div>\n    <div class='policy-info-bottom'>\n        <div class='policy-event-text'>\n            <span>{eventDetails.text}</span>\n        </div>\n        <div class='policy-event-source'>\n            <a href={eventDetails.source} target=\"_blank\">Source</a>\n        </div>\n    </div>\n     \n</div>\n\n<style>\n    .policy-info-box {\n        border: 1px solid #47B3F2;\n        max-height: 400px;\n        width: 300px;\n        background: white;\n        border-radius: 4px;\n        font-family: 'Trebuchet MS';\n        display: flex;\n        flex-direction: column;\n        align-content: space-between;\n    }\n\n    .policy-info-top {\n        padding: 5px;\n    }\n\n    .policy-event-date {\n        font-size: 12px;\n        font-weight: bold;\n        margin-bottom: 3px;\n    }\n\n    .policy-event-title {\n        font-size: 16px;\n        font-weight: bold;\n        margin-bottom: 5px;\n    }\n\n    .policy-event-text {\n        font-size: 11px;\n    }\n\n    .policy-event-photo {\n        display: flex;\n        justify-content: center;\n        margin: 5px 0;\n    }\n\n    .policy-event-photo img {\n        max-width: 250px;\n        max-height: 150px;\n        padding: 5px;\n    }\n\n    .policy-info-bottom {\n        background: #47B3F2;\n        color: white;\n        padding: 5px;\n    }\n\n    .policy-event-source {\n        font-size: 11px;\n        font-style: italic;\n        cursor: pointer;\n        flex-grow: 2;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n    }\n\n    .policy-event-source a {\n        text-align: end;\n    }\n\n\n</style>",
    "<script>\n    import { styler, value, pointer, listen, transform, easing, keyframes } from 'popmotion';\n    import { onMount } from 'svelte';\n    import EventInfoBox from './EventInfoBox.svelte';\n    import moment from 'moment';\n\n    export let currentScrubberPosition;\n    export let bufferRadius;\n    export let eventPosition;\n    export let eventDetails;\n    export let id;\n\n\n//---- Position the policy dot and container according to their calculated position -----------\n\n    let policyDotStyler;\n    let policyDotContainerStyler\n    let policyInfoContainerStyler;\n    var policyDateStyler;\n\n    $: {\n        if (policyDateStyler && eventPosition > 0) {\n            policyDotContainerStyler.set('left', eventPosition);\n            policyInfoContainerStyler.set('left', eventPosition);\n            policyDateStyler.set('left', eventPosition);\n        }\n    }\n\n//---- Keep track of where the current event is relative to the event's highlighting/buffer zone. --------\n//---- Inside this buffer the event should highlight, outside it should diminish back to a dot. -------\n\n    eventPosition = 0;\n    let bufferStartPosition = 0;\n    let bufferEndPosition = 0;\n    let isEventHighlighted = false;\n\n    $: {\n        if (eventPosition > 0) {\n            bufferEndPosition = eventPosition + 2*bufferRadius;\n            bufferStartPosition = eventPosition - bufferRadius;\n        }\n    }\n\n    $: { // When the scrubber enters the buffer zone, highlight\n        if (isScrubberWithinEventBuffer(currentScrubberPosition)) {\n            if (!isEventHighlighted) {\n                highlightEvent();\n            }\n        } else {\n            if (isEventHighlighted) {\n                diminishEvent();\n            }\n        }\n    }\n\n    const isScrubberWithinEventBuffer = (currentScrubberPosition) => {\n        if (currentScrubberPosition == 0) return false; // start position nothing should be open\n\n        return currentScrubberPosition >= bufferStartPosition &\n            currentScrubberPosition <= bufferEndPosition;\n    }\n\n//----- Animation specification for expanding and contractng the event -------------\n\n    const policyInfoContractedState = { scale: 0 , translateX: '-50%', translateY: '-25%'};\n    const policyInfoExpandedState = { scale: 1 , translateX: '-25%', translateY: '-102%'};\n\n    const expandDuration = 400;\n    const contractDuration = 600;\n\n    let policyDotExpandKeyFrames =  keyframes({\n        values: [ \n            { scale: 1 },\n            { scale: 2 }\n        ],\n        times: [0, 1],\n        duration: expandDuration,\n        easings: [easing.easeOut]\n    });\n\n    let policyInfoExpandKeyFrames =  keyframes({\n        values: [ \n            policyInfoContractedState,\n            policyInfoExpandedState\n        ],\n        times: [0, 1],\n        duration: expandDuration,\n        easings: [easing.easeOut]\n    });\n\n    let policyDotContractKeyFrames =  keyframes({\n        values: [ \n            { scale: 2 },\n            { scale: 1 }\n        ],\n        times: [0, 1],\n        duration: contractDuration,\n        easings: [easing.easeIn]\n    });\n\n    let policyInfoContractKeyFrames =  keyframes({\n        values: [ \n            policyInfoExpandedState,\n            policyInfoContractedState\n        ],\n        times: [0, 1],\n        duration: contractDuration,\n        easings: [easing.easeIn]\n    });\n\n\n    // To highlight the whole event, expand the dot and show the policy info box\n    const highlightEvent = () => {\n        isEventHighlighted = true;\n\n        policyDotExpandKeyFrames.start(style => {\n            policyDotStyler.set(style);\n        });\n        policyInfoExpandKeyFrames.start(style => {\n          policyInfoContainerStyler.set(style);\n        });   \n    }\n\n    // To diminish the whole event, contract the dot and hide the policy info box\n    const diminishEvent = () => {\n        isEventHighlighted = false;\n\n        policyDotContractKeyFrames.start(style => {\n            policyDotStyler.set(style);\n        });\n        policyInfoContractKeyFrames.start(style => {\n          policyInfoContainerStyler.set(style);\n        });\n    }\n\n    onMount(async () => {\n        // Create a styler to style the policy dot - to control the dot's animation\n        const policyDot = document.querySelector(\".policy-dot\"+id);\n        policyDotStyler = styler(policyDot);\n\n        // Create a styler to style the dot container - to position the policy dot on the timeline\n        const policyDotContainer = document.querySelector(\".policy-dot-container\"+id);\n        policyDotContainerStyler = styler(policyDotContainer);\n       \n\n        const policyInfoContainer = document.querySelector(\".policy-info-container\"+id);\n        policyInfoContainerStyler = styler(policyInfoContainer);\n        \n\n        const policyDate = document.querySelector(\".policy-event-date\"+id);\n        policyDateStyler = styler(policyDate);\n        \n    });\n\n</script>\n\n<div class='policy-event'>\n    <div class={'policy-event-date policy-event-date'+id}>\n        <!-- {moment(eventDetails.date).format(\"MMMM YYYY\")} -->\n    </div>\n    <div class={\"policy-dot-container policy-dot-container\"+id}>\n        <div class={\"policy-dot-hit-area policy-dot-hit-area\"+id}>\n            <div class={\"policy-dot policy-dot\"+id}></div>\n        </div>\n    </div>\n    <div class={\"policy-info-container policy-info-container\"+id}>\n        <EventInfoBox eventDetails={eventDetails} />\n    </div>\n  \n</div>\n\n<style>\n\n\n    .policy-event-date {\n        position: absolute;\n        font-size: 13px;\n        top: 20%;\n        left: 50px; \n        transform: translateY(-50%) translateX(-50%);   \n    }\n\n    .policy-dot-container {\n        position: absolute;\n        top: 50%;\n        left: 50px; \n        transform: translateY(-50%) translateX(-50%);\n    }\n\n    .policy-dot-hit-area {\n        padding: 30px;\n        width: 10px;\n        height: 10px;\n    }\n\n    .policy-dot {\n        background: darkslategrey;\n        width: 10px;\n        height: 10px;\n        border-radius: 5px;\n        cursor: pointer;\n    }\n\n    .policy-info-container {\n        height: 10;\n        width: 10;\n        position: absolute;\n        transform: translateY(-25%) translateX(-50%) scale(0);\n    }\n\n\n\n</style>",
    "<script>\n    import { onMount } from 'svelte';\n    import { styler, value, pointer, listen, transform, easing, keyframes } from 'popmotion';\n    import PolicyEvent from './PolicyEvent.svelte';\n    import moment from 'moment';\n    import { classnames } from './classnames.js';\n    import { select } from 'd3-selection';\n    import { scaleLinear } from 'd3-scale';\n    import { axisBottom, axisRight } from 'd3-axis';\n    import { line } from 'd3-shape';\n    import { max } from 'd3-array';\n\n\n    export let frameData;\n    export let currentTime;\n    export let maxTime;\n    export let pauseAnimation;\n    export let startAnimation;\n    export let updateCurrentTime;\n    export let isAnimationEnded;\n    export let changePlaybackRate;\n\n    const EVENT_BUFFER_TIME = 0.5; // how much time in seconds before and after to start showing an event\n\n    var isUserRunning = false; // Whether or not the USER has paused the animation\n    let isDragging = false; // is the user dragging the scrubber\n    let sliderWidth = 0;\n    let chartHeight = 0;\n    let maxScrubberWidth = 1000;// width of scrubber in px\n    let handleStyler;\n    let currPlayRate = 1;\n\n    $: {\n        maxScrubberWidth = sliderWidth;\n        addPm25TimeseriesChart();\n    }\n    \n\n\n    $: { // continuoslu check currentTime for where to place the scrubber handle\n        handleStyler && handleStyler.set('x', convertTimeToXPosition(currentTime));\n    }\n\n    $: {\n        if (isAnimationEnded) {\n            isUserRunning = false;\n        }\n    }\n\n    const convertTimeToXPosition =  (time) => {\n        return time * maxScrubberWidth / maxTime;\n    }\n\n    const convertXPositionToTime = (xPos) => {      \n        return !maxScrubberWidth ? 0 : xPos * maxTime / maxScrubberWidth;\n    }\n\n    onMount(async () => {\n        const slider = document.getElementById(\"slider\");\n        sliderWidth = slider.getBoundingClientRect().width;\n        chartHeight = document.getElementById(\"pm25-timeseries\").getBoundingClientRect().height;\n        const handle = document.querySelector('.handle-hit-area');\n        handleStyler = styler(handle);\n        const handleX = value(0, (newX) => {\n            updateCurrentTime(convertXPositionToTime(newX));\n        });\n    \n        // const range = document.querySelector('.range');\n\n        const pointerX = (x) => pointer({ x }).pipe(xy => xy.x, transform.clamp(0, maxScrubberWidth));\n\n        const startDrag = () => {\n            isDragging = true;\n            pauseAnimation();\n            pointerX(convertTimeToXPosition(currentTime)).start(handleX);\n        };\n    \n        const stopDrag = () => {\n            if (!isDragging) return;\n            handleX.stop();\n            // convert from poistion to time\n            updateCurrentTime(convertXPositionToTime(handleStyler.get('x')));\n            isUserRunning && startAnimation();\n            isDragging = false;\n        };\n\n        listen(handle, 'mousedown touchstart').start(startDrag);\n        listen(document, 'mouseup touchend').start(stopDrag);\n        document.addEventListener('keyup', event => {\n            if (event.code === 'Space') {\n                isUserRunning ? handlePauseAnimation() : handleStartAnimation();\n            }\n        });\n    });\n\n    const handlePauseAnimation = () => {\n        isUserRunning = false;\n        pauseAnimation();\n    }\n\n    const handleStartAnimation = () => {\n        isUserRunning = true;\n        startAnimation();\n    }\n\n    const handleChangePlaybackRate = (playRate) => {\n        currPlayRate = playRate;\n        changePlaybackRate(playRate);\n    }\n\n    let startDate = moment(frameData[0].date);\n    let endDate = moment(frameData[frameData.length-1].date);\n    let totalDays = endDate-startDate;\n\n    const getPolicyEventPosition = (policyDate) => {\n        let policyDays = moment(policyDate)-startDate;\n        return policyDays/totalDays;\n    }\n\n    const policyEvents = [\n        {\n            date: '2019-03-21',\n            title: 'Government Bans Raw Coal',\n            text: 'The government bans the burning of raw coal within the city limits. The ban does not apply to power plants.',\n            source: 'https://breathemongolia.org/',\n            imgSource: './banRawCoal.jpg'\n        },\n        {\n            date: '2019-06-29',\n            title: 'Government Bans Raw Coal',\n            text: 'The government bans the burning of raw coal within the city limits. The ban does not apply to power plants.',\n            source: 'https://breathemongolia.org/',\n            imgSource: './banRawCoal.jpg'\n        },\n        {\n            date: '2019-11-30',\n            title: 'Government Bans Raw Coal',\n            text: 'The government bans the burning of raw coal within the city limits. The ban does not apply to power plants.',\n            source: 'https://breathemongolia.org/',\n            imgSource: './banRawCoal.jpg'\n        }\n    ]\n\n    const addPm25TimeseriesChart = () => {\n\n        let margin = {top: 10, right: 0, bottom: 10, left: 0},\n            width = maxScrubberWidth - margin.left - margin.right, // CHANGE WIDTH TO WIDTH OF SCRUBBER\n            height = chartHeight - margin.top - margin.bottom;\n\n        let svg = select(\"#pm25-timeseries\")\n            .append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .style(\"overflow-x\", \"overlay\")\n            .append(\"g\")\n                .attr(\"transform\",\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        //---- Add X axis ----------------\n        var xAxisScale = scaleLinear()\n            .domain([0, frameData.length-1]) // length of the timeseries\n            .range([ 0, width ]);\n\n        let xAxis = axisBottom(xAxisScale).tickFormat(x => moment(frameData[x].date).format(\"MMMM\"));    \n\n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis);\n\n\n        //---- Add Y axis ----------------\n        // 1. create scale\n        let yAxisScale = scaleLinear()\n            .domain(\n                [0, max(frameData.map(function(frame) {return frame.pm25}))]\n            )\n            .range([ height, 0]);\n        // 2. format\n        let yAxis = axisRight(yAxisScale).ticks(5)\n        // 3. add to graph\n        svg.append(\"g\").call(yAxis);    \n    \n\n        //----- Add the line -----------\n        svg.append(\"path\")\n            .datum(frameData)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", line()\n                .x(function(frame) { return xAxisScale(frameData.indexOf(frame)) })\n                .y(function(frame) { return yAxisScale(frame.pm25) })\n            );\n    }\n\n    const displayTime = (timeNow, timeTotal) => {\n        const duration = moment.duration(timeNow, 'seconds');\n        const formatted = moment.utc(duration.asMilliseconds()).format(\"m:ss\");\n        return formatted;\n    }\n</script> \n\n\n<div class=\"scrubber\">\n    <div class='pm25-chart' id='pm25-timeseries'>\n\n    </div>\n    <div class=\"slider\" id=\"slider\">\n        <div class=\"range\"></div>\n\n        <div class=\"handle-container\">\n            <div class=\"handle-hit-area\">\n                <div class=\"handle\"></div>\n            </div>\n        </div>\n\n        {#each policyEvents as policyEvent, i}\n            <PolicyEvent \n                currentScrubberPosition={convertTimeToXPosition(currentTime)} \n                eventPosition={Math.round(sliderWidth * getPolicyEventPosition(policyEvent.date))}\n                eventDetails={policyEvent}\n                bufferRadius={EVENT_BUFFER_TIME * maxScrubberWidth / maxTime}\n                id={i}\n            />\n    \n        {/each}\n        \n    </div>\n    <div class='scrubber-controls'>\n        <div class='control-button-container'>\n            {#if isUserRunning} \n            <button class='pause-button play-button' on:click={handlePauseAnimation}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71 135\">\n                    <defs>\n                        <style>\n                        .cls-pause-1 {\n                            stroke: #000;\n                            stroke-miterlimit: 10;\n                        }\n                        </style>\n                    </defs>\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1-2\">\n                        <path class=\"cls-pause-1\" d=\"M10.5.5h0a10,10,0,0,1,10,10v114a10,10,0,0,1-10,10h0a10,10,0,0,1-10-10V10.5A10,10,0,0,1,10.5.5Z\"/>\n                        <path class=\"cls-pause-1\" d=\"M60.5.5h0a10,10,0,0,1,10,10v114a10,10,0,0,1-10,10h0a10,10,0,0,1-10-10V10.5A10,10,0,0,1,60.5.5Z\"/>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n            {:else}\n            <button class='start-button play-button' on:click={handleStartAnimation}>\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.57 127.1\">\n                    <defs>\n                        <style>\n                        .cls-play-1 {\n                            stroke: #000;\n                            fill: #000;\n                            stroke-miterlimit: 10;\n                        }\n                        </style>\n                    </defs>\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1-2\">\n                        <path class=\"cls-play-1\" d=\"M106.78,74.45,19.36,124.92A12.57,12.57,0,0,1,.5,114V13.09A12.57,12.57,0,0,1,19.36,2.2l87.42,50.48a12.57,12.57,0,0,1,0,21.77Z\" transform=\"translate(0 -0.01)\"/>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n            {/if}\n            <div class='speed-buttons-container'>\n                <button class={classnames('speed-button', currPlayRate == 0.5 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(0.5)}>{'0.5x'}</button>\n                <button class={classnames('speed-button', currPlayRate == 1 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(1)}>{'1x'}</button>\n                <button class={classnames('speed-button', currPlayRate == 2 ? 'speed-button-selected' : '')} on:click={() => handleChangePlaybackRate(2)}>{'2x'}</button>\n            </div>\n         </div>\n         <div class='current-time-display'>\n            {`${displayTime(currentTime)} / ${displayTime(maxTime)}`}\n         </div>\n    </div>\n</div>\n\n<style>\n    .scrubber {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n    }\n\n    .pm25-chart {\n        height: 100px;\n    }\n\n    /* CONTROLS SECTION */\n    .scrubber-controls {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 50px;\n        /* border: 2px solid blue; */\n    }\n\n    .control-button-container {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        /* border: 1px solid green; */\n    }\n\n    .speed-buttons-container {\n        display: flex;\n        width: auto;\n        justify-content: space-between;\n    }\n\n    .speed-button {\n        width: 45px;\n        margin-right: 5px;\n        \n        background-color: #47B3F2;\n        color: white;\n        border-radius: 15px;\n\n        border: none;\n        height: 20px;\n\n        cursor: pointer;\n    }\n\n    .speed-button-selected {\n        background-color: #e3a005;\n    }\n\n    .speed-button:focus {\n        outline: none;\n    }\n\n    .speed-button:active {\n        outline: none;\n        transform: scale(1.1);\n    }\n\n    .speed-button:hover {\n        transform: scale(1.1);\n    }\n\n    .current-time-display {\n\n    }\n\n    .play-button svg {\n        height: 20px;\n    }\n\n    /* CONTROL BUTTON STYLING */\n    .play-button {\n        border: none;\n        background: none;\n        cursor: pointer;\n        height: 100%;\n        width: 30px;\n        margin-right: 10px;\n    }\n\n    .play-button:hover {\n        transform: scale(1.1);\n    }\n\n    .play-button:focus {\n        outline: none;\n    }\n\n    .play-button:active {\n        outline: none;\n        transform: scale(1.3);\n    }\n    \n    \n     /* SLIDER SECTION */\n    .slider {\n        height: 80px;\n        position: relative;\n        /* border: 1px solid orange; */\n    }\n\n    .range {\n        border-radius: 3px;\n        height: 6px;\n        background: lightgray;\n        position: absolute;\n        top: 50%;\n        left: 0;\n        right: 0;\n        transform: translateY(-50%);\n    }\n\n    .handle-container {\n        position: absolute;\n        top: 50%;\n        left: 0%;\n        transform: translateY(-50%) translateX(-50%);\n    }\n\n    .handle-hit-area {\n        padding: 30px;\n        width: 5px;\n        height: 40px;\n    }\n\n    .handle {\n        background: red;\n        width: 5px; \n        height: 40px;\n        cursor: pointer;\n    }\n\n</style>\n\n",
    "<script>\n    import { scaleLinear} from 'd3-scale'\n    import { interpolateRdYlBu } from 'd3-scale-chromatic';\n\n    export let currentFrame;\n    export let frameData;\n\n    const MAX_HEIGHT = 534; // total height of mercury rect - DO NOT CHANGE\n    const MIN_HEIGHT = 105; // how far the mercury rect dips below the mercury circle -DO NOT CHANGE\n    const HEIGHT_CHANGE = MAX_HEIGHT-MIN_HEIGHT; // 429\n\n    const TOPMOST_Y = 17; // DO NOT CHANGE - mercury of thermometer starts at y=17px and moves down\n    const BOTTOMMOST_Y = TOPMOST_Y + HEIGHT_CHANGE;\n\n    const darkRed = '#cc2f10';\n    const lightRed = '#eb7963';\n    const yellow = '#ebc263';\n    const white = '#ffffff';\n    const darkBlue = '#1065cc';\n    const lightBlue = '#539ffc';\n\n    const tempScale = [-40, -20, 5, 15, 30, 40];\n    const colorScale = [darkBlue, lightBlue, white, yellow, lightRed, darkRed];\n \n    var scaleTempToColor = scaleLinear().domain(tempScale).range(colorScale);\n    var scaleTempToPixels = scaleLinear().domain([-40, 40]).range([0, HEIGHT_CHANGE]);\n    scaleTempToPixels.clamp(true);\n\n    let pixelChangeFromBaseline = 0; // -40 C to start \n    let height = MIN_HEIGHT;\n    let starting_y = BOTTOMMOST_Y;\n    let tempColor = '#c1272d';\n    let currentTemp = 0;\n\n    $: {\n        currentTemp = Math.round(frameData[currentFrame].temp);\n        pixelChangeFromBaseline = scaleTempToPixels(currentTemp);\n        height = MIN_HEIGHT + pixelChangeFromBaseline;\n        starting_y = BOTTOMMOST_Y - pixelChangeFromBaseline;\n        tempColor = scaleTempToColor(currentTemp);\n    }\n\n</script>\n\n<div class='thermometer'>\n<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 184 613\">\n  <defs>\n    <style>\n      .cls-1 {\n        fill: rgba(255, 255, 255, 0.521);\n      }\n\n      .cls-2 {\n        fill: none;\n        stroke: #333;\n        stroke-miterlimit: 10;\n        stroke-width: 2px;\n        \n      }\n\n      .cls-4 {\n        font-size: 35px;\n        font-family: 'Gill Sans';\n        font-weight: bold;\n        letter-spacing: 0em;\n        stroke-width: 1px;\n        stroke: #333;\n      }\n    </style>\n  </defs>\n  <g>\n    <path class=\"cls-1\" d=\"M694,689a91,91,0,0,1-59-160.28V137a59,59,0,1,1,118,0V528.72A91,91,0,0,1,694,689Z\" transform=\"translate(-602 -77)\"/>\n    <path class=\"cls-2\" d=\"M694,689a91,91,0,0,1-59-160.28V137a59,59,0,1,1,118,0V528.72A91,91,0,0,1,694,689Z\" transform=\"translate(-602 -77)\"/>\n  </g>\n  <rect class=\"cls-3\" fill={tempColor} x=\"49\" y={starting_y} width=\"86\" height={height} rx=\"43\"/>\n  <!-- Full Thermometer DO NOT CHANGE -->\n  <!-- <rect class=\"cls-3\" x=\"49\" y=\"17\" width=\"86\" height=\"534\" rx=\"43\"/> -->\n  <circle class=\"cls-3\" fill={tempColor} cx=\"92\" cy=\"521\" r=\"75\"/>\n  <text class=\"cls-4\"  fill={'#fff'} transform=\"translate(53.42 532)\">{currentTemp}Â°C</text>\n</svg>\n</div>\n\n<style>\n\n.thermometer {\n    max-width: 50px;\n    max-height: 100px;\n}\n\n</style>"
  ],
  "names": [],
  "mappings": "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"
}